/*! service-centers - release: 1.1.0 */
import{getFormatedPhone as e}from"./servicio-85ca4631.js";import"./servicio.js";const t=window.google;class s{constructor({$element:e,baseSite:s,center:n}){this.$element=document.querySelector(e),this.baseSite=s,this.bounds,this.center=n,this.geocoder=new t.maps.Geocoder,this.infoWindow=new t.maps.InfoWindow,this.markers={},this.map,this.init()}bounceMarker(e,s){void 0!==this.markers[e]&&("start"===s?this.markers[e].setAnimation(t.maps.Animation.BOUNCE):this.markers[e].setAnimation(null))}clickMarker(e){void 0!==this.markers[e]&&t.maps.event.trigger(this.markers[e],"click")}async init(){return this.map=await new t.maps.Map(this.$element,{center:new t.maps.LatLng(this.center),disableDefaultUI:!0,draggable:!0,zoom:10,zoomControl:!0}),this.map}setInfoWindow(t){const s=e(t,!1);return`<div class="service-centers__map__info-window">\n            <button class="service-centers__map__info-window__close"><span class="alk-icon-close"></span></button>\n            <h4>${t.name}</h4>\n            ${t.address.length?`<p><strong>Dirección:</strong><br />\n                ${t.address}\n            </p>`:""}\n            ${t.phone.length?`<p><strong>Contacto telefónico:</strong><br />\n                ${s.join(" ")}\n            </p>`:""}\n            ${t.map.length?` <p><i class="alk-icon-exportar"></i>\n                <a rel="noopener" href="${t.map}" title="Indicaciones para llegar a ${t.name}" target="_blank">¿Cómo llegar?</a>\n            </p>`:""}\n        </div>`}async setMarkers(e){return this.bounds=new t.maps.LatLngBounds,this.clearMarkers(),this.markers={},e.map((e=>{const s=new t.maps.Marker({position:new t.maps.LatLng(e.coordinates.lat,e.coordinates.lng),map:this.map,icon:`https://cdn.jsdelivr.net/gh/ux-alkosto/service-centers@latest/dist/${this.baseSite}/img/pin.svg`,title:e.name});s.addListener("click",(()=>{this.infoWindow.setContent(this.setInfoWindow(e)),this.infoWindow.open(this.map,s),this.map.panTo(s.getPosition()),document.dispatchEvent(new CustomEvent("updateCenter",{detail:{center:e.id}}))})),this.bounds.extend(s.getPosition()),this.markers[e.id]=s})),this.map.setCenter(this.bounds.getCenter()),this.map.fitBounds(this.bounds),this.map.getZoom()>18&&this.map.setZoom(18),this.markers}clearMarkers(){return Object.values(this.markers).map((e=>e.setMap(null)))}}export{s as Map};

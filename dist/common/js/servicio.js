/*! service-centers - v1.0.0 */
import{geocoder,infoWindow,map,markers}from"./map.js";import Select from"./select.js";import ServiceCenter from"./service-center.js";(()=>{const e={get:async(e="")=>{if(e.length)return await fetch(e,{cache:"force-cache",mode:"cors"}).then(e=>e.json()).then(e=>e)},map:{init:async()=>d=await map.init("#service-centers-map")},menu:{render:({active:e,address:n,cellphone:t,email:a,hours:s,id:r,name:i,phone:o})=>`<div class="service-centers__menu__item">\n                    <input type="radio" name="centro-servicio" id="${r}" ${e?"checked":""}>\n                    <label for="${r}">${i}</label>\n                    <div class="service-centers__menu__item__body" data-service-center="${r}">\n                        <div class="schedules">\n                            <p><strong>Lunes a Viernes:</strong>\n                                11:00 a.m  - 3:00 p.m.</p>\n                            <p><strong>S치bados:</strong>\n                                11:00 a.m - 3:00 p.m.</p>\n                        </div>\n                        <div class="address">\n                            <p><strong>Direcci칩n:</strong>\n                                ${n}</p>\n                        </div>\n                        <div class="email">\n                            <p><strong>Correo electr칩nico:</strong>\n                                <a href="mailto:${a}" target="_blank" rel="nooppener">${a}</a>\n                            </p>\n                        </div>\n                        ${null!==o?`<div class="phone">\n                            <p><strong>Contacto telef칩nico:</strong>\n                                ${o}</p>\n                        </div>`:""}\n                        ${null!==t?`<div class="cell">\n                            <p><strong>Celular:</strong>\n                                ${t}</p>\n                        </div>`:""}\n                    </div>\n                </div>`,animateMarker:()=>{document.querySelectorAll(".service-centers__menu__item__body").forEach(e=>{e.addEventListener("mouseenter",()=>{map.bounceMarker(e.dataset.serviceCenter,"start")}),e.addEventListener("mouseleave",()=>{map.bounceMarker(e.dataset.serviceCenter,"stop")})})}},select:{init:()=>document.querySelectorAll("[data-custom-select").forEach(e=>new Select(e))}},n=document.getElementById("departamento"),t=document.getElementById("ciudad"),a=document.getElementById("categoria"),s=new Option(`Selecciona un ${n.labels[0].textContent.toLowerCase()}`,0,!0,!0),r=new Option(`Selecciona una ${t.labels[0].textContent.toLowerCase()}`,0,!0,!0),i=new Option(`Selecciona una ${a.labels[0].textContent.toLowerCase()}`,0,!0,!0),o=document.querySelector(".service-centers__menu"),c=new Event("updated");let d,p=!0,l=[];async function m({servicePointsCodes:e,stores:n}){return e=[...new Set(e)],await e.map(e=>{let t={id:e,coordinates:{lat:n[e].lat,lng:n[e].lng}};return t={...t,...n[e]},new ServiceCenter(t)})}function v(n){o.innerHTML="",n.map(n=>(n.activeCenter=p,p=!1,o.insertAdjacentHTML("beforeend",e.menu.render(n))))}n.append(s),t.append(r),a.append(i),void 0!==serviceCentersConfig.jsonFile&&e.get(serviceCentersConfig.jsonFile).then(async({categories:s,cities:o,stores:u})=>{await e.map.init().then(()=>{infoWindow.setPosition(d.getCenter()),infoWindow.setContent("Selecciona un departamento"),infoWindow.open(d)}),Object.entries(o).map(e=>{const t=e[1],a=e[0],s=new Option(t.name,a);n.append(s)}),e.select.init(),n.addEventListener("change",async()=>{p=!0,t.innerHTML="",t.append(r),infoWindow.close(),Object.values(o[n.value].cities).map(({categories:e})=>Object.values(e).map(({stores:e})=>e.map(e=>{l.push(e)}))),m({servicePointsCodes:l,stores:u}).then(n=>{v(n),map.renderMarkers(n),e.menu.animateMarker()}),Object.entries(o[n.value].cities).map(e=>{const n=e[1],a=e[0],s=new Option(n.name,a);t.append(s)}),t.dispatchEvent(c),a.innerHTML="",a.append(i),a.dispatchEvent(c),l=[]}),t.addEventListener("change",()=>{p=!0,a.innerHTML="",a.append(i),Object.values(o[n.value].cities[t.value].categories).map(({stores:e})=>e.map(e=>{l.push(e)})),m({servicePointsCodes:l,stores:u}).then(n=>{v(n),map.renderMarkers(n),e.menu.animateMarker()}),Object.entries(o[n.value].cities[t.value].categories).map(e=>{const n=s[e[0]].name,t=e[0],r=new Option(n,t);a.append(r)}),a.dispatchEvent(c),l=[]}),a.addEventListener("change",()=>{p=!0,Object.values(o[n.value].cities[t.value].categories[a.value].stores).map(e=>{l.push(e)}),m({servicePointsCodes:l,stores:u}).then(n=>{v(n),map.renderMarkers(n),e.menu.animateMarker()}),l=[]})})})();
/*! service-centers - release: 1.0.9 */
const t=window.google;export default class{constructor({$element:e,baseSite:n,center:s}){this.$element=document.querySelector(e),this.baseSite=n,this.bounds,this.center=s,this.geocoder=new t.maps.Geocoder,this.infoWindow=new t.maps.InfoWindow,this.markers={},this.map,this.init()}bounceMarker(e,n){void 0!==this.markers[e]&&("start"===n?this.markers[e].setAnimation(t.maps.Animation.BOUNCE):this.markers[e].setAnimation(null))}async getGeo(){try{return await async function(){return new Promise(((t,e)=>{navigator.geolocation.getCurrentPosition((e=>{t({lat:e.coords.latitude,lng:e.coords.longitude})}),(t=>{e(t)}))}))}().then((t=>t))}catch(t){return t}}async init(){return this.map=await new t.maps.Map(this.$element,{center:new t.maps.LatLng(this.center),disableDefaultUI:!0,draggable:!0,zoom:10,zoomControl:!0}),this.map}setInfoWindow(t){return`<div class="service-centers__map__info-window">\n            <button class="service-centers__map__info-window__close"><span class="alk-icon-close"></span></button>\n            <h4>${t.name}</h4>\n            <p><strong>Dirección:</strong><br />\n            ${t.address}\n            </p>\n            <p>\n            <i class="alk-icon-exportar"></i><a rel="noopener" href="${t.map}" title="Indicaciones para llegar a ${t.name}" target="_blank">¿Cómo llegar?</a>\n            </p>\n        </div>`}async setMarkers(e){return this.bounds=new t.maps.LatLngBounds,Object.values(this.markers).map((t=>t.setMap(null))),this.markers={},e.map((e=>{const n=new t.maps.Marker({position:new t.maps.LatLng(e.coordinates.lat,e.coordinates.lng),map:this.map,icon:`https://cdn.jsdelivr.net/gh/ux-alkosto/service-centers@latest/dist/${this.baseSite}/img/pin.svg`,title:e.name});n.addListener("click",(()=>{this.infoWindow.setContent(this.setInfoWindow(e)),this.infoWindow.open(this.map,n),this.map.panTo(n.getPosition()),document.dispatchEvent(new CustomEvent("updateCenter",{detail:{center:e.id}}))})),this.bounds.extend(n.getPosition()),this.markers[e.id]=n})),this.map.setCenter(this.bounds.getCenter()),this.map.fitBounds(this.bounds),this.map.getZoom()>18&&this.map.setZoom(18),this.markers}}
